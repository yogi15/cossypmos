package apps.window.referencewindow;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseEvent;
import java.rmi.RemoteException;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Date;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.event.CellEditorListener;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;


//import sun.java2d.Disposer;
import util.NumericTextField;
import util.commonUTIL;
import util.common.DateU;
import util.common.Period;
import util.swingComp.populateTableData;

//import util.DateCellEditor12;

import com.jidesoft.grid.DateCellEditor;
import com.standbysoft.component.date.swing.JDatePicker;

import apps.window.utilwindow.JDialogTable;
import beans.Book;
//import beans.Coupon;
import beans.Attribute;
import beans.Coupon;
import beans.LegalEntity;
import beans.Product;
import beans.StartUPData;

//import dbSQL.CouponSQL;
import dsServices.RemoteProduct;
import dsServices.RemoteReferenceData;
import dsServices.ServerConnectionUtil;

import com.toedter.calendar.JDateChooser; 

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Desai
 */


/**
 *
 * @author Desai
 */
public class ProductWindow extends javax.swing.JPanel {

    /**
     * Creates new form Bond
     */
	DefaultCellEditor  dce11;
	 public static  ServerConnectionUtil de = null;
	 RemoteReferenceData remoteBORef;
	 RemoteProduct remoteProduct;
	 String currency [];
	 
	   	Product product=new Product();
	 Coupon coupon = new Coupon();
	 Hashtable  attributeValue = new Hashtable();
    public ProductWindow() {
        initComponents();
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
    	de =ServerConnectionUtil.connect("localhost", 1099,commonUTIL.getServerIP());
	   	 try {
	   		 remoteBORef = (RemoteReferenceData) de.getRMIService("ReferenceData");
	   		remoteProduct =   (RemoteProduct) de.getRMIService("Product");
		
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
      //  bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        textField1 = new java.awt.TextField(30);
        textField1.setEditable(false);
        choice1 = new java.awt.Choice();
        button1 = new java.awt.Button();
        label2 = new java.awt.Label();
        textField2 = new java.awt.TextField();
        textField2.setEditable(false);
        jPanel2 = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        textField3 = new java.awt.TextField();
        choice2 = new java.awt.Choice();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        jPanel3 = new javax.swing.JPanel();
        label4 = new java.awt.Label();
        choice3 = new java.awt.Choice();
        label5 = new java.awt.Label();
        choice4 = new java.awt.Choice();
        label6 = new java.awt.Label();
        choice5 = new java.awt.Choice();
        jPanel4 = new javax.swing.JPanel();
        label7 = new java.awt.Label();
        textField4 = new java.awt.TextField();
        label8 = new java.awt.Label();
        textField5 = new java.awt.TextField();
        label9 = new java.awt.Label();
        textField6 = new java.awt.TextField();
        choice6 = new java.awt.Choice();
        
        jPanel5 = new javax.swing.JPanel();
        label10 = new java.awt.Label();
        textField7 = new java.awt.TextField();
        button4 = new java.awt.Button();
        label11 = new java.awt.Label();
        label12 = new java.awt.Label();
        choice7 = new java.awt.Choice();
        jPanel6 = new javax.swing.JPanel();
        label13 = new java.awt.Label();
        textField8 = new NumericTextField();
        label14 = new java.awt.Label();
        choice8 = new java.awt.Choice();
        label15 = new java.awt.Label();
        textField9 = new NumericTextField();
        label16 = new java.awt.Label();
        choice9 = new java.awt.Choice();
        label17 = new java.awt.Label();
        textField10 = new NumericTextField();
        label18 = new java.awt.Label();
        textField11 = new NumericTextField();
        label19 = new java.awt.Label();
        choice10 = new java.awt.Choice();
        textField12 = new java.awt.TextField();
        button5 = new java.awt.Button();
        label20 = new java.awt.Label();
        textField13 = new java.awt.TextField();
        label21 = new java.awt.Label();
        textField14 = new java.awt.TextField();
        button6 = new java.awt.Button();
        label22 = new java.awt.Label();
        choice11 = new java.awt.Choice();
        button7 = new java.awt.Button();
       jScrollPane2 = new javax.swing.JScrollPane();
       
        button8 = new java.awt.Button();
        button9 = new java.awt.Button();
        button10 = new java.awt.Button();
        button11 = new java.awt.Button();
        saveAsNewButton = new java.awt.Button();
        button13 = new java.awt.Button();
        button14 = new java.awt.Button();
        button15 = new java.awt.Button();
        button16 = new java.awt.Button();
        
        issueDate = new JDateChooser();
        datedDate = new JDateChooser();
        maturityDate = new JDateChooser();
        
  
        issueDate.setVisible(true);
        datedDate.setVisible(true);
        maturityDate.setVisible(true);
        
        jDatePicker1 = new com.standbysoft.component.date.swing.JDatePicker();
        jDatePicker2 = new com.standbysoft.component.date.swing.JDatePicker();
        jDatePicker3 = new com.standbysoft.component.date.swing.JDatePicker();
        
        jDatePicker1.setFreeText(false);
     //   jDatePicker1.setBackground(Color.red);
       // jDatePicker1.setBorder(new Border().);
        //jDatePicker1.set
        jDatePicker1.setDateFormat(commonUTIL.getDateFormat());
        
        jDatePicker2.setDateFormat(commonUTIL.getDateFormat());
        jDatePicker3.setDateFormat(commonUTIL.getDateFormat());
        
        jPanel8 = new javax.swing.JPanel();
        label23 = new java.awt.Label();
        label24 = new java.awt.Label();
        label25 = new java.awt.Label();
        choice12 = new java.awt.Choice();
        
        

    //    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setText("Name");

        choice1.setName("BMTN\n"); // NOI18N

        button1.setLabel("...");

        label2.setText("Product ID");

        //textField2.setEditable(false);
        textField2.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
               // .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
             //   .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
             //   .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 230, Short.MAX_VALUE)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                //    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                 //   .addComponent(choice1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setText("Source code");

        button2.setLabel("Load");

        button3.setLabel("Templates");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(button2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(textField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label4.setText("Bond Class");
        
        Vector v6 =null;
        
		try {
			v6 = (Vector)	  remoteBORef.getStartUPData("BOND.subType");
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		JComboBox comboBox16 = new JComboBox( convertVectortoSringArray(v6) );
		
		String s6=null;
		int i4=0;
		do{
			s6=(String) comboBox16.getItemAt(i4);
			choice3.addItem(s6);
			i4++;
		}while (comboBox16.getItemAt(i4)!=null);
        

        label5.setText("Bond Type");
        
        Vector v7 =null;
        
		try {
			v7 = (Vector)	  remoteBORef.getStartUPData("ProductType");
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		JComboBox comboBox17 = new JComboBox( convertVectortoSringArray(v7) );
		
		String s7=null;
		int i5=0;
		do{
			s7=(String) comboBox17.getItemAt(i5);
			choice4.addItem(s7);
			i5++;
		}while (comboBox17.getItemAt(i5)!=null);
        

        label6.setText("Security Type");

        choice5.setBackground(new java.awt.Color(236, 233, 216));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

       label7.setAlignment(java.awt.Label.CENTER);
        label7.setText("Issue Date");

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setText("Dated date");

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setText("maturity Date");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    
                		.addComponent(jDatePicker2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label8, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                    //.addComponent(jDatePicker1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDatePicker3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    
                    //.addComponent(textField6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(1, 1, 1)
                .addComponent(choice6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    //.addComponent(jDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDatePicker3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        
        
        jDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                // Systemout.println(jDatePicker1.getSelectedDate());
                
                jDatePicker1.setText(getDateFormat(jDatePicker1.getSelectedDate()));
                // Systemout.println();
            }

			
        });
        
        
      
        
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label10.setText("Issuer");

        textField7.setText("");

        button4.setLabel("....");

        label11.setAlignment(java.awt.Label.CENTER);
        label11.setText("  ");

        label12.setText("Country");
        
        Vector v4 =null;
        
		try {
			v4 = (Vector)	  remoteBORef.getStartUPData("Country");
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		JComboBox comboBox14 = new JComboBox( convertVectortoSringArray(v4) );
		
		String s4=null;
		int i2=0;
		do{
			s4=(String) comboBox14.getItemAt(i2);
			choice7.addItem(s4);
			i2++;
		}while (comboBox14.getItemAt(i2)!=null);
        
        

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textField7, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(choice7, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(label10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textField7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label13.setAlignment(java.awt.Label.CENTER);
        label13.setText("Issue Price");

        textField8.setText("100");
        

        label14.setAlignment(java.awt.Label.CENTER);
        label14.setText("Currency");
        
        Vector v2 =null;
        
		try {
			v2 = (Vector)	  remoteBORef.getStartUPData("Currency");
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		JComboBox comboBox12 = new JComboBox( convertVectortoSringArray(v2) );
		
		String s2=null;
		int i=0;
		do{
			s2=(String) comboBox12.getItemAt(i);
			choice8.addItem(s2);
			i++;
		}while (comboBox12.getItemAt(i)!=null);
		
        
        label15.setAlignment(java.awt.Label.CENTER);
        label15.setText("Redem. Price");

        textField9.setText("100");

        label16.setAlignment(java.awt.Label.CENTER);
        label16.setText("Redem. Currency");
        
        
       Vector v3 =null;
        
		try {
			v3 = (Vector)	  remoteBORef.getStartUPData("Currency");
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		JComboBox comboBox13 = new JComboBox( convertVectortoSringArray(v2) );
		
		String s3=null;
		int i1=0;
		do{
			s3=(String) comboBox13.getItemAt(i1);
			choice9.addItem(s3);
			i1++;
		}while (comboBox12.getItemAt(i1)!=null);

        label17.setAlignment(java.awt.Label.CENTER);
        label17.setText("Total Issued");

        textField10.setText("0");

        label18.setAlignment(java.awt.Label.CENTER);
        label18.setText("Face Value");

        textField11.setText("1");
        

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(textField8, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField10, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(textField11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(label18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textField8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(choice8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(choice9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        label19.setAlignment(java.awt.Label.CENTER);
        label19.setText("Code");
        
        Vector v5 =null;
        
		try {
			v5 = (Vector)	  remoteBORef.getStartUPData("securityCode");
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	final	JComboBox comboBox15 = new JComboBox( convertVectortoSringArray(v5) ); 
		
		String attributeName=null;
		int i3=0;
		do{
			
			attributeName=(String) comboBox15.getItemAt(i3);
			choice10.addItem(attributeName);  // product code 
			Attribute att = new Attribute();
			  att.setName(attributeName);
			 att.setValue("");
			  attributeValue.put(attributeName,att);
			
			i3++;
		}while (comboBox15.getItemAt(i3)!=null);
        
		
		
		choice10.addItemListener(new ItemListener () {

			@Override
			public void itemStateChanged(ItemEvent e) {
				// TODO Auto-generated method stub
				String attributeName = choice10.getItem(choice10.getSelectedIndex()).toString();
				//textField12.setText(choice10.getItem(choice10.getSelectedIndex()).toString());
				Attribute atru = (Attribute) getAttribute(attributeName);
				textField12.setText(atru.getValue()) ; 
					
				
				
			}

			
			
		});
		textField12.addFocusListener(new FocusListener() {

			@Override
			public void focusGained(FocusEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void focusLost(FocusEvent e) {
				// TODO Auto-generated method stub
				String attributeName = choice10.getItem(choice10.getSelectedIndex()).toString();
				String value = textField12.getText().trim();
				textField12.setText("");
				if(value != null & value.length() > 0) {
					Attribute att = getAttribute(attributeName);
				
				  att.setValue(value);
				  attributeValue.put(attributeName,att);
				}
			}
			
		});
		
    	//processTableDataattribute(Attributesmodel,);
		String att [] = {"AttributeName","AttributeValue"};
    	DefaultTableModel Attributesmodel = new DefaultTableModel(att,0);
    	processTableDataattribute(Attributesmodel,new Integer(textField2.getText()).intValue());
      final  JDialogTable showAttributes =  new JDialogTable(Attributesmodel);
      showAttributes.setLocationRelativeTo(this);

        button5.setLabel("Codes...");
        
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	String att [] = {"AttributeName","AttributeValue"};
            	DefaultTableModel Attributesmodel = new DefaultTableModel(att,0);
            	processTableDataattribute(Attributesmodel,new Integer(textField2.getText()).intValue());
            	DefaultTableModel tablemodel = new DefaultTableModel(att,0);
            	
            	showAttributes.jTable1.removeAll();
            	showAttributes.jTable1.setModel(Attributesmodel);
            	
            	
            	
            	showAttributes.setVisible(true);
            	
            }
        });
        
        
        
        label20.setAlignment(java.awt.Label.CENTER);
        label20.setText("Min. Putchase Amt.");

        textField13.setText("0");

        label21.setAlignment(java.awt.Label.CENTER);
        label21.setText("Comment");

        button6.setLabel("Set Custom Data");

        label22.setAlignment(java.awt.Label.CENTER);
        label22.setText("Bond Status");

        button7.setLabel("Issue Credit Ratings");
       String[] columnNames =  {"Coupon Fields", "Values"};
        Object[][] data =
    	{
        		 {" ID", "1"},
                 {" ProductId","0"},
                 {" CouponType", "Fixed"},
                 {" Rate","0" },
                 {" CCY", "INR"},
                 {" DayCount", "30/360"},
                 {" CouponAdjustMentMethod", "1"},
                 {" CouponFrequency","PA"},
                 {" BusinessDayConvention", "END_MONTH"},
                 {" CouponDate", getDateFormat(commonUTIL.getCurrentDate())},
                 {" Rating", "0"},
                 {" Ex_dividend", "1"},
                 {" RecordDays", "0"},
                 {" ShutDays", "1"},
                 {" AccrualDigits",  "0.0"},
                 {" PriceDecimals",  "0.0"},
                 {" YieldDecimals",  "0.0"},
                 {" NominalDecimals",  "0.0"},
                 {" AnnounceDate", getDateFormat(commonUTIL.getCurrentDate())},
                 {" AuctionDate", getDateFormat(commonUTIL.getCurrentDate())},
                 {" WithholdingTax", "0"},
                 {" ApplyWithholdingTax", "1"},
                 {" WhenIssueBond", "0"},
                 {" TickSize", "0.1"},
                 {" YieldMethod", "ISMA"},
                 {" QuoteType", "Clean"},
                 {" Activefrom", getDateFormat(commonUTIL.getCurrentDate())}
    	};
        MyTableModel model = new MyTableModel(data, columnNames);
    	
    	Vector v1 = null;
    	Vector ve1 = null;
    	Vector ve2 = null;
    	Vector ve3 = null;
    	Vector ve4 = null;
    	Vector ve5 = null;
    	Vector ve6 = null;
    	Vector dateRoll = null;
    	
    	
		try {
			v1 = (Vector)	  remoteBORef.getStartUPData("Currency");
			ve1=(Vector)	  remoteBORef.getStartUPData("YieldMethod");
			ve2=(Vector)	  remoteBORef.getStartUPData("DayCount");
			ve3=(Vector)	  remoteBORef.getStartUPData("QuoteType");
			ve4=(Vector)	  remoteBORef.getStartUPData("TickSize");
			ve5=(Vector)	  remoteBORef.getStartUPData("PaymentFRQ");
			ve6=(Vector)	  remoteBORef.getStartUPData("Tenor");
			dateRoll=(Vector)	  remoteBORef.getStartUPData("DateRoll");
			Iterator  tenors = ve6.iterator();
			while(tenors.hasNext()) {
				StartUPData value = (StartUPData) tenors.next();
				choice6.addItem(value.getName());
				
			}
			
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		choice6.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {
				// TODO Auto-generated method stub
				String tenor = choice6.getSelectedItem().toString();
				Period period = Period.valueOf(tenor);
			
				DateU dateissueDate = DateU.valueOf(jDatePicker1.getSelectedDate());
				dateissueDate.convertToCode(tenor);
				jDatePicker3.setSelectedDate(dateissueDate.getDate());
			}
			
		});
		
	
		
    	JComboBox comboBox11 = new JComboBox( convertVectortoSringArray(v1) );
    	JComboBox comboBox21 = new JComboBox( convertVectortoSringArray(ve1) );
    	JComboBox comboBox22 = new JComboBox( convertVectortoSringArray(ve2) );
    	JComboBox comboBox23 = new JComboBox( convertVectortoSringArray(ve3) );
    	JComboBox comboBox24 = new JComboBox( convertVectortoSringArray(ve4) );
    	JComboBox comboBox25 = new JComboBox( convertVectortoSringArray(ve5) );
    	//JComboBox comboBox26 = new JComboBox( convertVectortoSringArray(ve5) );
		JComboBox comboBox26 = new JComboBox( convertVectortoSringArray(v6) );
		JComboBox comboBox27 = new JComboBox( convertVectortoSringArray(dateRoll) );
		
				
		JComboBox couponType = new JComboBox();
		couponType.addItem(new String("Fixed"));
		couponType.addItem(new String("Float"));
    	
    	  dce11 = new DefaultCellEditor( comboBox11 );
    	  final DefaultCellEditor dce12 = new DefaultCellEditor( comboBox21 );
    	  final DefaultCellEditor dce13 = new DefaultCellEditor( comboBox22 );
    	  final DefaultCellEditor dce14 = new DefaultCellEditor( comboBox23 );
    	  final DefaultCellEditor dce15 = new DefaultCellEditor( comboBox24 );
    	  final DefaultCellEditor dce16 = new DefaultCellEditor( comboBox25 );
    	  final DefaultCellEditor dce17 = new DefaultCellEditor( comboBox25 );
    	  final DefaultCellEditor dce18 = new DefaultCellEditor( couponType );
    	  final DefaultCellEditor dce19 = new DefaultCellEditor( comboBox27 );
    	//  final DefaultCellEditor dce19 = new DefaultCellEditor( comboBox27 );
    	  
     	 
    	  TableCellEditor t1 = (TableCellEditor)new DateCellEditor();
    	  final DateCellEditor12 datecel9 = new DateCellEditor12();
    	  final DateCellEditor12 datecel18 = new DateCellEditor12();
    	  final DateCellEditor12 datecel19 = new DateCellEditor12();
    	  final DateCellEditor12 datecel26 = new DateCellEditor12();
    	 
        jTable2 = new javax.swing.JTable(model)
        
    	{
        	
            
            
    		//  Determine editor to be used by row
    		public TableCellEditor getCellEditor(int row, int column)
    		{
    			int modelColumn = convertColumnIndexToModel( column );
    			
    			if (modelColumn == 1 && row ==2)
    				return (TableCellEditor)dce18;
    			
    			if (modelColumn == 1 && row ==8)
    				return (TableCellEditor)dce19;
    			if (modelColumn == 1 && row ==24)
    				return (TableCellEditor)dce12;
    			else if (modelColumn == 1 && row ==4)
    				return (TableCellEditor)dce11;
    			else if (modelColumn == 1 && row ==5)
    				return (TableCellEditor)dce13;
    			else if (modelColumn == 1 && row ==25)
    				return (TableCellEditor)dce14;
    			else if (modelColumn == 1 && row ==23)
    				return (TableCellEditor)dce15;
    			else if (modelColumn == 1 && row ==7)
    				return (TableCellEditor)dce16;
    			if (modelColumn == 1 && row ==9) {
   				 TableCellEditor t1 = ((TableCellEditor) datecel9);
   			        
   			       
   				return (TableCellEditor)t1;
   				
   			}if (modelColumn == 1 && row ==18) {
  				 TableCellEditor t1 = ((TableCellEditor) datecel18);
			        
			        
				return (TableCellEditor)t1;
				
			}if (modelColumn == 1 && row ==19) {
				 TableCellEditor t1 = ((TableCellEditor) datecel9);
			        
			        
				return (TableCellEditor)t1;
				
			}if (modelColumn == 1 && row ==26) {
				 TableCellEditor t1 = ((TableCellEditor) datecel26);
			        
			       
				return (TableCellEditor)t1;
				
			}else  
    				 
    				return super.getCellEditor(1, 0);
    			    			
    			
    		}
    	};
    	
        jTable2.setAutoCreateRowSorter(true);
        jTable2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable2.setCellSelectionEnabled(true);
        jTable2.setDragEnabled(true);
        jTable2.setEditingRow(0);
        jTable2.getTableHeader().setReorderingAllowed(false); 
        TableCellEditor col = jTable2.getCellEditor(4, 1);
       
        datecel9.addCellEditorListener(new CellEditorListener() {

			@Override
			public void editingCanceled(ChangeEvent e) {
				// TODO Auto-generated method stub
				// Systemout.println(e.getSource());
				// Systemout.println(e.toString());
				
			}

			@Override
			public void editingStopped(ChangeEvent e) {
				// TODO Auto-generated method stub
			DateCellEditor12 dd =  (DateCellEditor12)e.getSource();
		//	// Systemout.println(dd.getCellEditorValue().toString());
			coupon.setCouponDate(dd.getCellEditorValue().toString());
				//// Systemout.println(e.toString());
				
			}
        	
        });
        datecel18.addCellEditorListener(new CellEditorListener() {

			@Override
			public void editingCanceled(ChangeEvent e) {
				// TODO Auto-generated method stub
			//	// Systemout.println(e.getSource());
				//// Systemout.println(e.toString());
				
			}

			@Override
			public void editingStopped(ChangeEvent e) {
				// TODO Auto-generated method stub
			DateCellEditor12 dd =  (DateCellEditor12)e.getSource();
		//	// Systemout.println(dd.getCellEditorValue().toString());
				//// Systemout.println(e.toString());
			coupon.setAnnounceDate(dd.getCellEditorValue().toString());
			}
        	
        });
        datecel19.addCellEditorListener(new CellEditorListener() {

			@Override
			public void editingCanceled(ChangeEvent e) {
				// TODO Auto-generated method stub
				//// Systemout.println(e.getSource());
				//// Systemout.println(e.toString());
				
				
			}

			@Override
			public void editingStopped(ChangeEvent e) {
				// TODO Auto-generated method stub
			DateCellEditor12 dd =  (DateCellEditor12)e.getSource();
			//// Systemout.println(dd.getCellEditorValue().toString());
			coupon.setAuctionDate(dd.getCellEditorValue().toString());	//// Systemout.println(e.toString());
				
			}
        	
        });
        datecel26.addCellEditorListener(new CellEditorListener() {

			@Override
			public void editingCanceled(ChangeEvent e) {
				// TODO Auto-generated method stub
				// Systemout.println(e.getSource());
				// Systemout.println(e.toString());
				
			}

			@Override
			public void editingStopped(ChangeEvent e) {
				// TODO Auto-generated method stub
			DateCellEditor12 dd =  (DateCellEditor12)e.getSource();
			//System.out.println(dd.getCellEditorValue().toString());
			coupon.setActivefrom(dd.getCellEditorValue().toString());
				
			}
        	
        });
        
        
        
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {

			@Override
			public void mouseClicked(MouseEvent e) {
				int rowindex = jTable2.getSelectedRow(); 
				TableModel model = jTable2.getModel();
				// Systemout.println( model.getValueAt(rowindex, 1));
			/*	Vector vector = (Vector) process.selectRecordProcess(ss.intValue());
				Book book = (Book) vector.get(0);
				jTextField4.setText(new Integer(book.getPrice()).toString());
				jTextField3.setText(book.getAuthor());
				jTextField2.setText(book.getTitle());
				jTextField1.setText(new Integer(book.getBook_ID()).toString()); */
				
			}

			
        
        	
        });
      //  populateTableData table = new populateTableData("pp");
      //  jTable2 = null;
      //  table.getpopulateTable();
    

        //org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, choice1, org.jdesktop.beansbinding.ObjectProperty.create(), jTable2, org.jdesktop.beansbinding.BeanProperty.create("selectedElement"));
        //bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(jTable2);
      jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(choice3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(choice4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(choice5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(label21, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(choice11, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(choice10, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(textField12, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(textField14, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(label22, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label20, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField13, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choice5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(choice4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(choice3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textField12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(choice10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(label21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(label20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textField14, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(label22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(button7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(button6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(choice11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
        );

        button8.setLabel("Load");

        button9.setLabel("New");
        button9.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				processNewAction();
				
			}
        	
        });

        button10.setLabel("Delete");
        String s [] = {"id","LegalName"};
    	DefaultTableModel tablemodel = new DefaultTableModel(s,0);
    	processTableData(tablemodel);
      final  JDialogTable showLE = new JDialogTable(tablemodel);
      showLE.setLocationRelativeTo(this);
      
      // loads issuer
      showLE.jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

			@Override
			public void mouseClicked(MouseEvent e) {
				int id  = ((Integer)	showLE.jTable1.getValueAt(showLE.jTable1.getSelectedRow(),0)).intValue();
				product.setIssuerId(id);
				 String ss = (String)	showLE.jTable1.getValueAt(showLE.jTable1.getSelectedRow(),1);
				 textField7.setText(ss);  // setting issuer textbox     
				 label11.setText(ss);
				showLE.dispose();
			}
			
      
      	
      });
        button11.setLabel("Save");
        button11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	
            	button11ActionPerformed(evt);
            }
        });
        saveAsNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	
            	saveAsNewButtonActionPerformed(evt);
            }
        });
        
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	
            	String s [] = {"LegalName"};
            	
            	DefaultTableModel tablemodel = new DefaultTableModel(s,0);
            	
            	processTableData(tablemodel);
            	
            	
            	
            	showLE.setVisible(true);
            	
            }
        });
        
        String productColums [] = {"Product Id","Product Name"};
        final DefaultTableModel productTableModel = new DefaultTableModel(productColums,0);
      	

      	final  JDialogTable showProducts = new JDialogTable(productTableModel);
        showProducts.setLocationRelativeTo(this);
        
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	
            	 String productColums [] = {"Product Id","Product Name"};
            	DefaultTableModel productTableModel = new DefaultTableModel(productColums,0);
            	
            	showProducts.jTable1.removeAll();
            	loadProductDetails(productTableModel);
            	showProducts.jTable1.setModel(productTableModel);
            	//tablemodel.getDataVector().removeAllElements();
            //	loadProductDetails(tablemodel);    	
            	
            	showProducts.setVisible(true);
            	
            }
        });
        
        showProducts.jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

    		@Override
    		public void mouseClicked(MouseEvent e) {
    			System.out.println("jTable1 action here");
    			int id  = ((Integer) showProducts.jTable1.getValueAt(showProducts.jTable1.getSelectedRow(),0)).intValue();
    			product.setIssuerId(id);
    				
    			try {
    					
    				 product = (Product) remoteProduct.selectProduct(id);
    					
    				Vector<Coupon> couponVector = (Vector) remoteProduct.getCoupon(id);
    					
    				setProductDetails(product, couponVector);
    				
    			} catch (RemoteException e1) {
    					// TODO Auto-generated catch block
    				e1.printStackTrace();
    			
    			}
    						
    				showProducts.dispose();	
    			}
    		      	
        });  
        
        saveAsNewButton.setLabel("Save As New");

        button13.setEnabled(false);
        button13.setLabel("Update Name");

        button14.setLabel("Help");

        button15.setLabel("Print");

        button16.setLabel("Close");

       
        
        
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(button10, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(button11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(saveAsNewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(button13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(button14, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        //    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            //    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(button8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveAsNewButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(button15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

       // bindingGroup.bind();

      //  pack();
    }// </editor-fold>                        

    

	
    
    private String []  convertVectortoSringArray(Vector v) {
    	String name [] = null;
    	int i=0;
    	if(v != null ) {
    		name = new String[v.size()];
    		Iterator its = v.iterator();
    		while(its.hasNext()) {
    			name [i] = ( (StartUPData) its.next()).getName();
    			i++;
    		}
    	}
		return name;                                           
        // TODO add your handling code here:
    } 

    /**
     * @param args the command line arguments
     */
    
    private void button11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    
      boolean productSaved = true;
    	  coupon = new Coupon();
    	//coupon.setBook_name(jTextField2.getText());
      //System.out.println("----"+ ((Double.parseDouble((String) jTable2.getValueAt(4,1)))));
      
   	// comment the below statement when you want to test update
  	int productId = (new Integer((String) jTable2.getValueAt(1,1).toString() ))==0?
  								0:(new Integer ((String) jTable2.getValueAt(1,1).toString()));
  	
  	//uncomment the below statement when you want to test update
  	//int productId = 3;
  	if (textField7.getText().equals("")) {
  		
  		JOptionPane.showMessageDialog(null,"Please select Issuer",null,
  				JOptionPane.INFORMATION_MESSAGE);
  		
  	} else {
  		
  		 coupon.setId(new Integer((jTable2.getValueAt(0,1).toString())));
  	      coupon.setProductId(new Integer((String) jTable2.getValueAt(1,1).toString()));
  	      coupon.setCouponType((String) jTable2.getValueAt(2, 1));
  	      coupon.setFixedRate(Double.parseDouble((String) jTable2.getValueAt(3,1)));
  	      System.out.println(coupon.getFixedRate());
  	      coupon.setCCY((String) jTable2.getValueAt(4, 1));
  	   	 coupon.setDayCount((String) jTable2.getValueAt(5, 1));
  	   	 coupon.setCouponAdjustMentMethod((String) jTable2.getValueAt(6, 1));
  	   	 coupon.setCouponFrequency((String) jTable2.getValueAt(7, 1));
  	   	 coupon.setBusinessDayConvention((String) jTable2.getValueAt(8, 1));
  	 //  	 coupon.setCouponDate((String) jTable2.getValueAt(9, 1));
  	   	 coupon.setRating((String) jTable2.getValueAt(10, 1));
  	  // 	 System.out.println(((String) jTable2.getValueAt(11,1).getClass()).trim());
  	   	 coupon.setEx_dividend(Double.parseDouble((String) jTable2.getValueAt(11,1)));
  	   	 coupon.setRecordDays(Integer.parseInt((String) jTable2.getValueAt(12,1)));
  	   	 coupon.setShutDays(Integer.parseInt((String) jTable2.getValueAt(13,1)));
  	   	 coupon.setAccrualDigits(Double.parseDouble((String) jTable2.getValueAt(14,1)));
  	   	 coupon.setPriceDecimals(Double.parseDouble((String) jTable2.getValueAt(15,1)));
  	   	 coupon.setYieldDecimals(Double.parseDouble((String) jTable2.getValueAt(16,1)));
  	   	 coupon.setNominalDecimals(Double.parseDouble((String) jTable2.getValueAt(17,1)));
  	   	// coupon.setAnnounceDate((String) jTable2.getValueAt(18, 1));
  	  //  	 coupon.setAuctionDate((String) jTable2.getValueAt(19, 1));
  	    	 coupon.setWithholdingTax((String) jTable2.getValueAt(20, 1));
  	    	 coupon.setApplyWithholdingTax((String) jTable2.getValueAt(21, 1));
  	    	 coupon.setWhenIssueBond((String) jTable2.getValueAt(22, 1));
  	    	 coupon.setTickSize((String) jTable2.getValueAt(23, 1));
  	    	 coupon.setYieldMethod((String) jTable2.getValueAt(24, 1));
  	    	 coupon.setQuoteType((String) jTable2.getValueAt(25, 1));
  	  //  	 coupon.setActivefrom((String) jTable2.getValueAt(26, 1));
  	    
  	    	

  	    product .setId(productId);
  	   	product.setProductType(choice4.getItem(choice4.getSelectedIndex()).toString());
  	   	product.setProductname(textField1.getText());
  	   	product.setProdcutShortName(choice3.getItem(choice3.getSelectedIndex()).toString());
  	   	product.setQuantity(Double.parseDouble(textField10.getText()));
  	   	product.setIssueDate( ( getDateFormat(jDatePicker1.getSelectedDate()) ).toString() );
  	   	product.setMarturityDate( ( getDateFormat(jDatePicker3.getSelectedDate())).toString());
  	   	product.setDatedDate( ( getDateFormat(jDatePicker2.getSelectedDate())).toString());
  	  // 	product.setIssuerId(2);
  	   	product.setTenor(choice6.getItem(choice6.getSelectedIndex()).toString());
  	   	product.setCountry(choice7.getItem(choice7.getSelectedIndex()).toString());
  	   	product.setIssuePrice(Double.parseDouble(textField8.getText()));
  	    product.setIssueCurrency(choice8.getItem(choice8.getSelectedIndex()).toString());
  	    product.setRedemptionPrice(Double.parseDouble(textField9.getText()));
  	    product.setRedemptionCurrency(choice9.getItem(choice9.getSelectedIndex()).toString());
  	    product.setFaceValue(Double.parseDouble(textField11.getText()));
  	    product.setCode(choice10.getItem(choice10.getSelectedIndex()).toString()); 
  	    product.setAttributes(getAttribtes());
  	    
  	//product.setProdcutShortName(shortName);
  	    
  	  String name = product.getProductType()+"."+product.getProdcutShortName()+"."+coupon.getCouponFrequency() + "."+
   			  product.getMarturityDate().substring(3, 5)+"."+
   			  product.getMarturityDate().substring(0, 2)+"."+
   			  product.getMarturityDate().substring(6,product.getMarturityDate().length())+ "."+ 
   		      product.getTenor()+"."+product.getCountry()+"."+
   		      product.getRedemptionCurrency()+
   		      product.getMarturityDate().substring(6,product.getMarturityDate().length());
  	  
  		 try {
  	 		 //flag = remoteBORef.saveCoupon(coupon);
  			String attruibutesValues = product.getAttributes();
    		if(validateAtt(attruibutesValues)) {
  	 		  if ( productId == 0 ) {
  	 			    
  	 			
  	 		//String shortName = product.getMarturityDate().substring(3, 5)+"."+product.getMarturityDate().substring(0, 2)+"."+product.getProdcutShortName()+"."+product.getMarturityDate().substring(6,product.getMarturityDate().length());
  	 			 product.setName(name);
  	 			 product.setProductname(name);
  	 		
  	 			    productId = remoteProduct.saveProduct(product,coupon);
  	 			    if(productId == -1) 
  	 			    	JOptionPane.showMessageDialog(null," Product Already Exists ",null,
  	 	  	      				JOptionPane.INFORMATION_MESSAGE);
  	 			 //textField2.setText(( (Integer) productId ).toString());
  	 			 //jTable2.setValueAt(productId);
  	 			 // CouponSQL.save(coupon, remoteBORef);
  	 			 
  	 		  } else {
  	 			  
  	 			  	product.setName(name);
  	 				product.setProductname(name);
  	 			   	product.setProdcutShortName(choice3.getItem(choice3.getSelectedIndex()).toString());
  	 			 
  	 			   	productSaved = remoteProduct.updateProduct(product,coupon);
  	 			 
  	 			   	System.out.println("productSaved "+ productSaved);
  	 			// textField2.setText(( (Integer) productId ).toString());
  	  			// jTable2.setValueAt(productId, 1, 1);
  	 		 
  	 		  }
  	 		 
  			
  	 		System.out.println("After saved productId: "+ productId);
  	       //String mess =  process.newRecordProcess(book);
  	       if( productId == 0 || !productSaved) {

  	     		JOptionPane.showMessageDialog(null,"not saved ",null,
  	      				JOptionPane.INFORMATION_MESSAGE);
  	    	} else {
  	      		/*TableModel mo = jTable1.getModel();
  	      		coupon.setBookno(remoteBORef.getMAXLEID());
  	      		model.insertRow(mo.getRowCount(), new Object[]{book.getBookno(),book.getBook_name(),book.getLe_id()});
  	      		repaint();*/
  	    		JOptionPane.showMessageDialog(null,"saved ",null,
  	      				JOptionPane.INFORMATION_MESSAGE);
  	    		//textField2.setText(((Integer)(product.getId())).toString());
  	    		textField2.setText(((Integer)(productId)).toString());
  	    		textField1.setText(product.getProductname());
  	    		choice3.select(product.getProdcutShortName());
  	    		jTable2.setValueAt(productId, 1, 1);
  	    		System.out.println("After saved getName: "+ textField1.getText());
  	    		System.out.println("After saved getProdcutShortName: "+ textField2.getText());
  	    		System.out.println(new Integer((String) jTable2.getValueAt(1,1).toString()));
  	    		
  	      	}
    		}
  	 	  } catch (RemoteException e) {
  				// TODO Auto-generated catch block
  			//	e.printStackTrace();
  				JOptionPane.showMessageDialog(null,"RemoteException ",null,
  	      				JOptionPane.INFORMATION_MESSAGE);
  		}
  	}
     
    
	
    }
   
    private void saveAsNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    	
    	//coupon.setBook_name(jTextField2.getText());
    	String name = "";
    	
    	if (textField7.getText().equals("")) {
      		
      		JOptionPane.showMessageDialog(null,"Please select Issuer",null,
      				JOptionPane.INFORMATION_MESSAGE);
      		
      	} else {
      		
      	
      		 coupon.setId(new Integer((jTable2.getValueAt(0,1).toString())));
			 coupon.setProductId(new Integer((String) jTable2.getValueAt(1,1).toString()));
			 coupon.setCouponType((String) jTable2.getValueAt(2, 1));
			 System.out.println((String) jTable2.getValueAt(3,1));
			 coupon.setFixedRate(Double.parseDouble((String) jTable2.getValueAt(3,1)));
			 coupon.setCCY((String) jTable2.getValueAt(4, 1));
			 coupon.setDayCount((String) jTable2.getValueAt(5, 1));
			 coupon.setCouponAdjustMentMethod((String) jTable2.getValueAt(6, 1));
			 coupon.setCouponFrequency((String) jTable2.getValueAt(7, 1));
			 coupon.setBusinessDayConvention((String) jTable2.getValueAt(8, 1));
			   //  	 coupon.setCouponDate((String) jTable2.getValueAt(9, 1));
			 coupon.setRating((String) jTable2.getValueAt(10, 1));
			// 	 System.out.println(((String) jTable2.getValueAt(11,1).getClass()).trim());
			 coupon.setEx_dividend(Double.parseDouble((String) jTable2.getValueAt(11,1)));
			 coupon.setRecordDays(Integer.parseInt((String) jTable2.getValueAt(12,1)));
			 coupon.setShutDays(Integer.parseInt((String) jTable2.getValueAt(13,1)));
			 coupon.setAccrualDigits(Double.parseDouble((String) jTable2.getValueAt(14,1)));
			 coupon.setPriceDecimals(Double.parseDouble((String) jTable2.getValueAt(15,1)));
			 coupon.setYieldDecimals(Double.parseDouble((String) jTable2.getValueAt(16,1)));
			 coupon.setNominalDecimals(Double.parseDouble((String) jTable2.getValueAt(17,1)));
			// coupon.setAnnounceDate((String) jTable2.getValueAt(18, 1));
			//  	 coupon.setAuctionDate((String) jTable2.getValueAt(19, 1));
			 coupon.setWithholdingTax((String) jTable2.getValueAt(20, 1));
			 coupon.setApplyWithholdingTax((String) jTable2.getValueAt(21, 1));
			 coupon.setWhenIssueBond((String) jTable2.getValueAt(22, 1));
			 coupon.setTickSize((String) jTable2.getValueAt(23, 1));
			 coupon.setYieldMethod((String) jTable2.getValueAt(24, 1));
			 coupon.setQuoteType((String) jTable2.getValueAt(25, 1));
			//  	 coupon.setActivefrom((String) jTable2.getValueAt(26, 1));

		   	product.setId(0);
		 	product.setProductType(choice4.getItem(choice4.getSelectedIndex()).toString());
		   	product.setProductname(textField1.getText());
		   	product.setProdcutShortName(choice3.getItem(choice3.getSelectedIndex()).toString());
		   	product.setQuantity(Double.parseDouble(textField10.getText()));
		   	product.setIssueDate( ( getDateFormat(jDatePicker1.getSelectedDate()) ).toString() );
		   	product.setMarturityDate( ( getDateFormat(jDatePicker3.getSelectedDate())).toString());
		   	product.setDatedDate( ( getDateFormat(jDatePicker2.getSelectedDate())).toString());
			  // 	product.setIssuerId(2);
			product.setTenor(choice6.getItem(choice6.getSelectedIndex()).toString());
			product.setCountry(choice7.getItem(choice7.getSelectedIndex()).toString());
			product.setIssuePrice(Double.parseDouble(textField8.getText()));
			product.setIssueCurrency(choice8.getItem(choice8.getSelectedIndex()).toString());
			product.setRedemptionPrice(Double.parseDouble(textField9.getText()));
			product.setRedemptionCurrency(choice9.getItem(choice9.getSelectedIndex()).toString());
			product.setFaceValue(Double.parseDouble(textField11.getText()));
			product.setCode(choice10.getItem(choice10.getSelectedIndex()).toString()); 
			product.setAttributes(getAttribtes());
			
			 name = product.getProductType()+"."+product.getProdcutShortName()+"."+coupon.getCouponFrequency() + "."+
 			  product.getMarturityDate().substring(3, 5)+"."+
 			  product.getMarturityDate().substring(0, 2)+"."+
 			  product.getMarturityDate().substring(6,product.getMarturityDate().length())+ "."+ 
 		      product.getTenor()+"."+product.getCountry()+"."+
 		      product.getRedemptionCurrency()+
 		      product.getMarturityDate().substring(6,product.getMarturityDate().length());
			
			//String shortName = product.getMarturityDate().substring(3, 5)+"."+product.getMarturityDate().substring(0, 2)+"."+product.getProdcutShortName()+"."+product.getMarturityDate().substring(6,product.getMarturityDate().length());
			product.setName(name);
			product.setProductname(name);
			//product.setProdcutShortName(shortName);
			
			int id = 0;
	    	
	    	try {
	    		//flag = remoteBORef.saveCoupon(coupon);
	    		String attruibutesValues = product.getAttributes();
	    		if(coupon.getFixedRate() == 0) {
	    			JOptionPane.showMessageDialog(null,"Enter Coupon Rate ",null,
		      				JOptionPane.INFORMATION_MESSAGE);
	    			return;
	    		}
	    		if(validateAtt(attruibutesValues)) {
	    		   id = remoteProduct.saveProduct(product,coupon);
	    		   
	    		// CouponSQL.save(coupon, remoteBORef);
			
	    		//String mess =  process.newRecordProcess(book);
	    		
	    		if(id == 0) {

	     		JOptionPane.showMessageDialog(null,"not saved ",null,
	      				JOptionPane.INFORMATION_MESSAGE);
	    		} else {
		      		
	    			/*TableModel mo = jTable1.getModel();
		      		coupon.setBookno(remoteBORef.getMAXLEID());
		      		model.insertRow(mo.getRowCount(), new Object[]{book.getBookno(),book.getBook_name(),book.getLe_id()});
		      		repaint();*/
		    		JOptionPane.showMessageDialog(null," Product saved with " + name,null,
		      				JOptionPane.INFORMATION_MESSAGE);
		    		textField2.setText(Integer.toString(id));
		    		textField1.setText(name);

	    		}
	    		}
	    	} catch (RemoteException e) {
				// TODO Auto-generated catch block
			//	e.printStackTrace();
				JOptionPane.showMessageDialog(null,"RemoteException ",null,
	      				JOptionPane.INFORMATION_MESSAGE);
	    	}
      	}  
    	
    	
    	
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private boolean validateAtt(String attributes) {
    	boolean flag = true;
    	if(attributes != null && attributes.length() > 0) {
    		String atttoken [] = attributes.trim().split(";"); 
    		
    		
    		for(int i =0;i<atttoken.length;i++) {
    			String att = (String) atttoken[i];
    			
    			if(att.contains("=")) {
    			String attvalue = att.substring(att.indexOf('=')+1, att.length());
    			String attnameName = att.substring(0, att.indexOf('='));
    		    flag= 	validateAttribute(attnameName, attvalue);
    		    if(!flag) {
    		    	JOptionPane.showMessageDialog(null,"Enter  "+ attnameName + " Attribute Value ",null,
    	      				JOptionPane.INFORMATION_MESSAGE);
    		    }
    }
    		}
    	}
    	return flag;
    }
    
    private String getAttribtes() {
    	Collection c = attributeValue.values();

		Iterator itr = c.iterator();

		 String attributes ="";
		    while(itr.hasNext()) {

		    	Attribute atru = (Attribute) itr.next();
		    	attributes = attributes + atru.getName()+"="+atru.getValue()+";";
		    	
		    	
               }
		return attributes;
    
	}
    
    private boolean validateAttribute(String name,String value) {
    	boolean validateAtt = true;
    	if(name.equalsIgnoreCase("SettlementType")) {
    		if(value == null || value.length() == 0) {
    			 validateAtt =false;
    		}
    	} else if(name.equalsIgnoreCase("ISIN")) {
    		if(value == null || value.length() == 0) {
   			 validateAtt =false;
   		}
   	}
    	return validateAtt;
    }
   private void loadAttruibtes(String attributes) {
	   if(attributes != null)  {
	   String attributestoken [] = attributes.split(";");
	   for(int i =0;i<attributestoken.length;i++) {
			String attribute = (String) attributestoken[i];
			String attvalue = attribute.substring(attribute.indexOf('=')+1, attribute.length());
			String attName =  attribute.substring(0, attribute.indexOf('='));
			Attribute attr = new Attribute();
			attr.setName(attName);
			attr.setValue(attvalue);
			attributeValue.put(attName, attr);
			
	   }
	   }
   }
	
   
    // Variables declaration - do not modify                     
    private java.awt.Button button1;
    private java.awt.Button button10;
    private java.awt.Button button11;
    private java.awt.Button saveAsNewButton;
    private java.awt.Button button13;
    private java.awt.Button button14;
    private java.awt.Button button15;
    private java.awt.Button button16;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private java.awt.Button button5;
    private java.awt.Button button6;
    private java.awt.Button button7;
    private java.awt.Button button8;
    private java.awt.Button button9;
    private java.awt.Choice choice1;
    private java.awt.Choice choice10;
    private java.awt.Choice choice13;
    private java.awt.Choice choice11;
    private java.awt.Choice choice2;
    private java.awt.Choice choice3;
    private java.awt.Choice choice4;
    private java.awt.Choice choice5;
    private java.awt.Choice choice6;
    private java.awt.Choice choice7;
    private java.awt.Choice choice8;
    private java.awt.Choice choice9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label14;
    private java.awt.Label label15;
    private java.awt.Label label16;
    private java.awt.Label label17;
    private java.awt.Label label18;
    private java.awt.Label label19;
    private java.awt.Label label2;
    private java.awt.Label label20;
    private java.awt.Label label21;
    private java.awt.Label label22;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private java.awt.TextField textField1;
    private NumericTextField textField10;
    private NumericTextField textField11;
    private java.awt.TextField textField12;
    private java.awt.TextField textField13;
    private java.awt.TextField textField14;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    private java.awt.TextField textField4;
    private java.awt.TextField textField5;
    private java.awt.TextField textField6;
    private java.awt.TextField textField7;
    private NumericTextField textField8;
    private NumericTextField textField9;
    
    JDateChooser issueDate;
    JDateChooser datedDate;
    JDateChooser maturityDate;
    
    private com.standbysoft.component.date.swing.JDatePicker jDatePicker1;
    private com.standbysoft.component.date.swing.JDatePicker jDatePicker2;
    private com.standbysoft.component.date.swing.JDatePicker jDatePicker3;
    
    private javax.swing.JPanel jPanel8;
    private java.awt.Label label23;
    private java.awt.Label label24;
    private java.awt.Label label25;
    private java.awt.Choice choice12;
    
    //private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration   
    
    public String getDateFormat(Date date) {
    	//System.out.println(date.getDay() + " " + date.getYear() + " " + date.getMonth());
    //	System.out.println(date.get);
    	SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy"); 
    	String dd = sdf.format(date); 
    	return dd;


    }
    
    public Date convertStringToDate(String stringDate, String dateFormat) {
    	if(stringDate.contains("-"))
    		stringDate = stringDate.replace("-", "/");
    	Date formattedDate = null;
    	
    	try {
			formattedDate = new SimpleDateFormat(dateFormat).parse(stringDate);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	return formattedDate;

    }
    
    private void processTableData(DefaultTableModel model) {
		// TODO Auto-generated method stub
    	Vector vector;
		try {
			vector = (Vector) remoteBORef.selectLEonWhereClause(" role like '%Issuer%'");
			Iterator it = vector.iterator();
	    	int i =0;
	    	while(it.hasNext()) {
	    		
	    		LegalEntity le = (LegalEntity) it.next();
	    	
	    		model.insertRow(i, new Object[]{le.getId(),le.getName()});
	    		i++;
	    		}
	    		
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    private void processTableDataattribute(DefaultTableModel model, int id) {
		// TODO Auto-generated method stub
    	Vector vector;
		try {
			vector = (Vector) remoteBORef.getStartUPData("productAttribute");
			
			Iterator it = vector.iterator();
	    	int i =0;
	    	while(it.hasNext()) {
	    		
	    		StartUPData productattributes = (StartUPData) it.next();
	    		String sql = " type = 'prod' and  id = "  + id;
	    		Vector attrs = (Vector) remoteBORef.selectWhereAttribute(sql);
	    		
	    	   if (attrs.size() > 0) {
	    		   Iterator atts = attrs.iterator();
	    		   while (atts.hasNext()) {
	    			   Attribute attru = (Attribute) atts.next();
	    		     model.insertRow(i, new Object[]{attru.getName(),attru.getValue()});
	    		     attributeValue.put(attru.getName(),attru);
	    		   }
	    	   } else {
	    		   model.insertRow(i, new Object[]{productattributes.getName()," "});
	    	   }
	    	  
	    		i++;
	    		
	    		}
	    		
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    protected void processNewAction() {
		// TODO Auto-generated method stub
    	jDatePicker1.setSelectedDate(commonUTIL.getCurrentDate()); // issue date
    	jDatePicker2.setSelectedDate(commonUTIL.getCurrentDate()); // dated date
    	jDatePicker3.setSelectedDate(commonUTIL.getCurrentDate());  // maurity date
    	
    	textField7.setText(""); // issuer name. 
    	label11.setText(""); // issuer text
    	textField1.setText(""); // product Name
    	textField2.setText("0"); // product id
    	choice4.select(0); // product type
    	//choice3.select(); // product subType
    	textField10.setText("0"); // quantity
    	choice7.select(0);  // country 
    	textField8.setText("0");  // issue price
    	choice8.select(0); // currency 
    	textField9.setText("0"); // redemptionprice 
    	choice9.select(0); // redemptioncurrency
    	textField11.setText("0"); // facevalue
    	choice10.select(0);  // product code
    	//dateddate
    	choice6.select( 0);   // tenor
    	jTable2.setValueAt("0", 0, 1);     	//Product id
    	jTable2.setValueAt("0", 1, 1); // coupon id
    	jTable2.setValueAt("Fixed", 2, 1);  // coupon type     	
    	jTable2.setValueAt("0", 3, 1); // Type of Rate
    	
    	jTable2.setValueAt("INR", 4, 1); // CCY
    	
    	jTable2.setValueAt("30/360", 5, 1); // Day Count
    	
    	
    	jTable2.setValueAt("1",6, 1); // Coupon Adjustment Method
    	
    	jTable2.setValueAt("PA", 7, 1); // Coupon Frequency
    	
    	jTable2.setValueAt("FOLLOWING", 8, 1); // Business Day Convention
    	
    	jTable2.setValueAt(getDateFormat(commonUTIL.getCurrentDate()), 9, 1); // Coupon date 
    	// Rating
    	jTable2.setValueAt("0", 10, 1);
    	// Ex_dividend
    	jTable2.setValueAt("0", 11, 1);
    	// RecordDays
    	jTable2.setValueAt("0", 12, 1);
    	// ShutDays
    	jTable2.setValueAt("0", 13, 1);
    	//AccrualDigits
    	jTable2.setValueAt("0", 14, 1);
       	//PriceDecimals
    	jTable2.setValueAt("0", 15, 1);
    	//YieldDecimals
    	jTable2.setValueAt("0", 16, 1);
    	//NominalDecimals
    	jTable2.setValueAt("0", 17, 1);
    	//AnnounceDate
    	jTable2.setValueAt(getDateFormat(commonUTIL.getCurrentDate()), 18, 1);
    	//AuctionDate
    	jTable2.setValueAt(getDateFormat(commonUTIL.getCurrentDate()), 19, 1);
    	//WithholdingTax
    	jTable2.setValueAt("0", 20, 1);
    	//ApplyWithholdingTax
    	jTable2.setValueAt("0", 21, 1);
    	//WhenIssueBond
    	jTable2.setValueAt("0", 22, 1);
    	//TickSize
    	jTable2.setValueAt("0.1", 23, 1);
    	//YieldMethod
    	jTable2.setValueAt("ISMA", 24, 1);
    	//QuoteType
    	jTable2.setValueAt("CleanPrice", 25, 1);
    	//Activefrom
    	jTable2.setValueAt(getDateFormat(commonUTIL.getCurrentDate()), 26, 1);
    	attributeValue.clear();
    	
    	
    	
		
	}
    private void loadProductDetails(DefaultTableModel model) {
 		// TODO Auto-generated method stub
     	Vector vector;
     	System.out.println("here loadProductDetails");
 		try {
 			String sql = " producttype ='BOND' and   productname like 'BOND%'";
			vector = (Vector) remoteProduct.selectProductWhereClaus(sql);
 			//System.out.println("vector" + vector.size());
 			Iterator it = vector.iterator();
 	    	int i =0;
 	    	
 	    	while(it.hasNext()) {
 	    		//System.out.println("i" + i);
 	    		Product product = (Product) it.next();
 	    		
 	    		model.insertRow(i, new Object[]{product.getId(),
 						product.getProductname(),
 						product.getProductType()});
 	    		
 	    		i++;
     		}
 	    	
 	    	
 	    	model.fireTableRowsInserted(0, i);

 		} catch (RemoteException e) {
 			// TODO Auto-generated catch block
 			e.printStackTrace();
 		}
     }
    
    private Attribute getAttribute(String name) {
    	Attribute att = null;
    	for(int i =0;i<attributeValue.size();i++ ) {
    		att = 	(Attribute)attributeValue.get(name);
    	}
    	return att;
    }
    private void setProductDetails(Product product, Vector<Coupon> couponVector) {
		// TODO Auto-generated method stub
    	
    	// Set all product details 
    //	product.getIssuerId()
    	 try {
		LegalEntity le = 	(LegalEntity) remoteBORef.selectLE(product.getIssuerId());
		   textField7.setText(le.getName()); // setting issuer textbox    
		
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
    	Coupon coupon = (Coupon) couponVector.get(0);
    	
    	textField2.setText(( (Integer) product.getId() ).toString());
    	textField1.setText(product.getProductname());
    	choice4.select(product.getProductType());
    	choice3.select(product.getProdcutShortName());
    	textField10.setText(( (Double) product.getQuantity() ).toString());
    	issueDate.setDate( convertStringToDate(product.getIssueDate(), "dd/MM/yyyy"));
    	maturityDate.setDate( convertStringToDate(product.getMarturityDate(), "dd/MM/yyyy"));
    	datedDate.setDate( convertStringToDate(product.getDatedDate(), "dd/MM/yyyy"));
    	
    	choice7.select(product.getCountry());
    	textField8.setText(( (Double) product.getIssuePrice() ).toString());
    	choice8.select(product.getIssueCurrency());
    	textField9.setText( ((Double) product.getRedemptionPrice()).toString());
    	choice9.select( product.getRedemptionCurrency());
    	textField11.setText(((Double) product.getFaceValue()).toString());
    	choice10.select( product.getCode());
    	
    	choice6.select( product.getTenor()); 
    	
    	jDatePicker1.setSelectedDate(commonUTIL.stringToDate(product.getIssueDate(), true)); // issue date
    	jDatePicker2.setSelectedDate(commonUTIL.stringToDate(product.getDatedDate(), true)); // dated date
    	jDatePicker3.setSelectedDate(commonUTIL.stringToDate(product.getMarturityDate(), true)); // maturity date
    	
    	attributeValue.clear();
    	loadAttruibtes(product.getAttributes());
    		   
    	// Set all coupon details
    	
    	//id
    	jTable2.setValueAt(coupon.getId(), 0, 1);
    	//Product id
    	jTable2.setValueAt(coupon.getProductId(), 1, 1);
    	//Coupon Type
    	jTable2.setValueAt(coupon.getCouponType(), 2, 1);
    	// Type of Rate
    	//jTable2.setValueAt(coupon.getTypeOfrate(), 3, 1);
    	// Rate
    	jTable2.setValueAt(Double.valueOf(coupon.getFixedRate()).toString(), 3, 1);
    	// CCY
    	jTable2.setValueAt(coupon.getCCY(), 4, 1);
    	// Day Count
    	jTable2.setValueAt(coupon.getDayCount(), 5, 1);
    	// Coupon Adjustment Method
    	jTable2.setValueAt(coupon.getCouponAdjustMentMethod(),6, 1);
    	// Coupon Frequency
    	jTable2.setValueAt(coupon.getCouponFrequency(), 7, 1);
    	// Business Day Convention
    	jTable2.setValueAt(coupon.getBusinessDayConvention(), 8, 1);
    	// Business Day Convention
    	jTable2.setValueAt(coupon.getCouponDate(), 9, 1);
    	// Rating
    	jTable2.setValueAt(coupon.getRating(), 10, 1);
    	// Ex_dividend
    	
    	jTable2.setValueAt(Double.valueOf(coupon.getEx_dividend()).toString(), 11, 1);
    	// RecordDays
    	jTable2.setValueAt(Integer.valueOf(coupon.getRecordDays()).toString(), 12, 1);
    	// ShutDays
    	jTable2.setValueAt(Integer.valueOf(coupon.getShutDays()).toString(), 13, 1);
    	//AccrualDigits
    	jTable2.setValueAt(Double.valueOf(coupon.getAccrualDigits()).toString(), 14, 1);
       	//PriceDecimals
    	jTable2.setValueAt(Double.valueOf(coupon.getPriceDecimals()).toString(), 15, 1);
    	//YieldDecimals
    	jTable2.setValueAt(Double.valueOf(coupon.getYieldDecimals()).toString(), 16, 1);
    	//NominalDecimals
    	jTable2.setValueAt(Double.valueOf(coupon.getNominalDecimals()).toString(), 17, 1);
    	//AnnounceDate
    	jTable2.setValueAt(coupon.getAnnounceDate(), 18, 1);
    	//AuctionDate
    	jTable2.setValueAt(coupon.getAuctionDate(), 19, 1);
    	//WithholdingTax
    	jTable2.setValueAt(coupon.getWithholdingTax(), 20, 1);
    	//ApplyWithholdingTax
    	jTable2.setValueAt(coupon.getApplyWithholdingTax(), 21, 1);
    	//WhenIssueBond
    	jTable2.setValueAt(coupon.getWhenIssueBond(), 22, 1);
    	//TickSize
    	jTable2.setValueAt(coupon.getTickSize(), 23, 1);
    	//YieldMethod
    	jTable2.setValueAt(coupon.getYieldMethod(), 24, 1);
    	//QuoteType
    	jTable2.setValueAt(coupon.getQuoteType(), 25, 1);
    	//Activefrom
    	jTable2.setValueAt(coupon.getActivefrom(), 26, 1);
    	
    	
    	
    }
    class MyTableModel extends DefaultTableModel {   
    	  
        public MyTableModel(Object rowData[][], Object columnNames[]) {   
             super(rowData, columnNames);   
             
          }   
          
        @Override  
          public Class getColumnClass(int col) {   
             
             return String.class;  //other columns accept String values   
        }   
       
        @Override  
          public boolean isCellEditable(int row, int col) {   
            if (col == 0)       //first column will be uneditable   
                return false;  
             if(row==0 && col == 1)
            	 return false;
             if(row==1 && col == 1)
            	 return false;
            	 
            else return true;   
          }   
        }    
    


}

